// <auto-generated />
using System;
using ICT272_Assignment_3_Online_Tourism_Platform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICT272_Assignment_3_Online_Tourism_Platform.Migrations
{
    [DbContext(typeof(ICT272_Assignment_3_Online_Tourism_PlatformContext))]
    partial class ICT272_Assignment_3_Online_Tourism_PlatformContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Controllers.TourGuideAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("UserId");

                    b.ToTable("TourGuideAgency");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServicesOffered")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.AvailableDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelPackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("AvailableDate");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PaymentReceived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TouristId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelPackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.FeaturedGuidedTours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuidedTourId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuidedTourId");

                    b.ToTable("FeaturedGuidedTours");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TouristId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelPackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedTourBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GuidedToursDateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuidedToursDateId");

                    b.HasIndex("UserId");

                    b.ToTable("GuidedTourBooking");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedTours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxGroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GuidedTours");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedToursDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("GuidedToursId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TourGuideAgencyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuidedToursId");

                    b.HasIndex("TourGuideAgencyId");

                    b.ToTable("GuidedToursDate");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Tourist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tourist");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgencyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxGroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("TravelPackage");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackageDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelPackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("TravelPackageDate");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxGroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TravelPackages");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackagesBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelPackagesDateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravelPackagesDateId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelPackagesBooking");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackagesDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgencyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelPackagesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("TravelPackagesId");

                    b.ToTable("TravelPackagesDate");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Controllers.TourGuideAgency", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.AvailableDate", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", "TravelPackage")
                        .WithMany("AvailableDates")
                        .HasForeignKey("TravelPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Booking", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.Tourist", "Tourist")
                        .WithMany("Bookings")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", "TravelPackage")
                        .WithMany("Bookings")
                        .HasForeignKey("TravelPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tourist");

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.FeaturedGuidedTours", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedTours", "GuidedTour")
                        .WithMany()
                        .HasForeignKey("GuidedTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidedTour");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Feedback", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.Tourist", "Tourist")
                        .WithMany("Feedbacks")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", "TravelPackage")
                        .WithMany("Feedbacks")
                        .HasForeignKey("TravelPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tourist");

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedTourBooking", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedToursDate", "GuidedToursDate")
                        .WithMany()
                        .HasForeignKey("GuidedToursDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidedToursDate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedToursDate", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.GuidedTours", "GuidedTours")
                        .WithMany()
                        .HasForeignKey("GuidedToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Controllers.TourGuideAgency", "TourGuideAgency")
                        .WithMany()
                        .HasForeignKey("TourGuideAgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidedTours");

                    b.Navigation("TourGuideAgency");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Tourist", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", "Agency")
                        .WithMany("TravelPackages")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackageDate", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", "TravelPackage")
                        .WithMany("TravelPackageDates")
                        .HasForeignKey("TravelPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackagesBooking", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackagesDate", "TravelPackagesDate")
                        .WithMany()
                        .HasForeignKey("TravelPackagesDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPackagesDate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackagesDate", b =>
                {
                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackages", "TravelPackages")
                        .WithMany()
                        .HasForeignKey("TravelPackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("TravelPackages");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Agency", b =>
                {
                    b.Navigation("TravelPackages");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.Tourist", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("ICT272_Assignment_3_Online_Tourism_Platform.Models.TravelPackage", b =>
                {
                    b.Navigation("AvailableDates");

                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");

                    b.Navigation("TravelPackageDates");
                });
#pragma warning restore 612, 618
        }
    }
}
